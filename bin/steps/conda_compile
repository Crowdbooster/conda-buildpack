# determine Python version
DEFAULT_PYTHON_VERSION="python-2.7.11"

# If no runtime given, assume default version.
if [ ! -f runtime.txt ]; then
   echo $DEFAULT_PYTHON_VERSION > runtime.txt
fi

PYTHON_VERSION=$(cat runtime.txt)
CONDA_ENV_NAME=$PYTHON_VERSION

# E.g. `3.6.1`
PYTHON_VERSION_NUMBER=`echo $PYTHON_VERSION | cut -d \- -f 2`

CONDA_INSTALLER="Miniconda2-4.3.21-Linux-x86_64.sh"

if [ ! -d /app/.heroku/miniconda ]; then
    puts-step "Preparing Python/Miniconda2 4.3.21 Environment"
    curl -Os https://repo.continuum.io/miniconda/$CONDA_INSTALLER
    bash $CONDA_INSTALLER -p /app/.heroku/miniconda/ -b | indent
    rm -fr $CONDA_INSTALLER 
fi

if conda info --envs | grep -q $CONDA_ENV_NAME; then
    echo "Conda environment already exists"
else
    conda create -n $CONDA_ENV_NAME --yes python=$PYTHON_VERSION_NUMBER
fi

source activate $CONDA_ENV_NAME
conda install pip setuptools --yes | indent

MINICONDA_DIR="/app/.heroku/miniconda"


echo "nomkl" > $HOME/.heroku/miniconda/conda-meta/pinned
echo "added pinned file in $HOME/.heroku/miniconda/conda-meta/pinned"
conda install nomkl

if [ -f conda-requirements.txt ]; then
    puts-step "Installing dependencies using Conda"
    source activate $CONDA_ENV_NAME
    conda install --file conda-requirements.txt --yes --quiet | indent
fi

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/app/.heroku/miniconda/lib
conda install -f cryptography
conda install -f pip

source activate $CONDA_ENV_NAME

# Clean up the installation environment .
conda clean -pt --yes > /dev/null

rm -rf $HOME/.cache
rm -rf $HOME/.heroku/miniconda/include
rm -rf $HOME/.heroku/miniconda/pkgs

set-env PATH "$MINICONDA_DIR/bin:\$PATH"
set-default-env PYTHONPATH "/app/:\$PYTHONPATH"
